{"version":3,"sources":["components/navigation.js","components/intro.js","components/about.js","components/skills.js","images/hadoop.png","images/node.png","images/terraform.png","components/project.js","components/contact.js","App.js","reportWebVitals.js","index.js"],"names":["OnScroll","props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","ButtonAppBar","className","AppBar","color","Toolbar","Typography","variant","to","spy","smooth","duration","delay","href","id","Intro","name","class","About","align","Paper","theme","createMuiTheme","palette","Default","main","primary","secondary","Skills","ThemeProvider","Button","Project","Grid","container","item","xs","sm","md","style","display","Card","CardActionArea","CardContent","CardMedia","image","hadoop","title","component","CardActions","fullWidth","node","terraform","contact","gutterBottom","fontSize","Link","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebe14dc6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Link } from \"react-scroll\";\r\n//importing the files for elevation\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\n\r\n// Importing the icons\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\n//importing the css file\r\nimport \"../style/navigation.css\";\r\n\r\n// Making the navigation-bar elevated\r\nfunction OnScroll(props) {\r\n  const { children, window } = props;\r\n\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nconst Desktop = ({ children }) => {\r\n  const isDesktop = useMediaQuery({ minWidth: 992 });\r\n  return isDesktop ? children : null;\r\n};\r\nconst Tablet = ({ children }) => {\r\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 });\r\n  return isTablet ? children : null;\r\n};\r\nconst Mobile = ({ children }) => {\r\n  const isMobile = useMediaQuery({ maxWidth: 767 });\r\n  return isMobile ? children : null;\r\n};\r\nconst Default = ({ children }) => {\r\n  const isNotMobile = useMediaQuery({ minWidth: 768 });\r\n  return isNotMobile ? children : null;\r\n};\r\n\r\nexport default function ButtonAppBar(props) {\r\n  return (\r\n    <div className=\"navbar\">\r\n      {/* For Desktop */}\r\n\r\n      <OnScroll {...props}>\r\n        <AppBar color=\"primary\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className=\"nav_p\">\r\n              <Link\r\n                to=\"about\"\r\n                spy={true}\r\n                smooth={true}\r\n                duration={500}\r\n                delay={100}\r\n              >\r\n                About\r\n              </Link>\r\n            </Typography>\r\n            <Typography variant=\"h6\" className=\"nav_p\">\r\n              <Link\r\n                to=\"skills\"\r\n                spy={true}\r\n                smooth={true}\r\n                duration={500}\r\n                delay={100}\r\n              >\r\n                Skills\r\n              </Link>\r\n            </Typography>\r\n            <Typography variant=\"h6\" className=\"nav_p\">\r\n              <Link\r\n                to=\"project\"\r\n                spy={true}\r\n                smooth={true}\r\n                duration={500}\r\n                delay={100}\r\n              >\r\n                Projects\r\n              </Link>\r\n            </Typography>\r\n            <Typography variant=\"h6\" className=\"nav_p\">\r\n              <Link\r\n                to=\"contact\"\r\n                spy={true}\r\n                smooth={true}\r\n                duration={500}\r\n                delay={100}\r\n              >\r\n                Contact\r\n              </Link>\r\n            </Typography>\r\n            <Typography variant=\"h4\" className=\"navbar_title\">\r\n              Ashutosh Singh\r\n            </Typography>\r\n            <Typography>\r\n              <a href=\"https://github.com/ashutosh5786\">\r\n                <GitHubIcon id=\"icons\" />\r\n              </a>\r\n            </Typography>\r\n            <Typography>\r\n              <a href=\"https://www.linkedin.com/in/ashutosh-singh5786/\">\r\n                <LinkedInIcon id=\"icons\" />\r\n              </a>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </OnScroll>\r\n\r\n      {/* For Tablets */}\r\n      {/* <Tablet>\r\n      <OnScroll>\r\n      <AppBar>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className=\"nav_p\">\r\n            About\r\n          </Typography>\r\n          <Typography variant=\"h6\" className=\"nav_p\">\r\n            Skills\r\n          </Typography>\r\n          <Typography variant=\"h6\" className=\"nav_p\">\r\n            Projects\r\n          </Typography>\r\n          <Typography variant=\"h6\" className=\"nav_p\">\r\n            Contact\r\n          </Typography>\r\n          <Typography variant=\"h4\" className=\"navbar_title\">\r\n            Ashutosh Singh\r\n          </Typography>\r\n          <Typography><a href=\"https://github.com/ashutosh5786\"><GitHubIcon id='icons'/></a></Typography>\r\n          <Typography><a href=\"https://www.linkedin.com/in/ashutosh-singh5786/\"><LinkedInIcon id='icons'/></a></Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </OnScroll>\r\n      </Tablet> */}\r\n      {/* For Mobile \r\n      \r\n      \r\n      Todo Need to write the code for Mobile Version\r\n      \r\n      */}\r\n    </div>\r\n  );\r\n}\r\n","// Importing the Files\r\nimport React from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n// Importing the css\r\nimport \"../style/intro.css\";\r\n\r\n// Making it responsive\r\nconst Desktop = ({ children }) => {\r\n  const isDesktop = useMediaQuery({ minWidth: 992 });\r\n  return isDesktop ? children : null;\r\n};\r\nconst Tablet = ({ children }) => {\r\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 });\r\n  return isTablet ? children : null;\r\n};\r\nconst Mobile = ({ children }) => {\r\n  const isMobile = useMediaQuery({ maxWidth: 767 });\r\n  return isMobile ? children : null;\r\n};\r\nconst Default = ({ children }) => {\r\n  const isNotMobile = useMediaQuery({ minWidth: 768 });\r\n  return isNotMobile ? children : null;\r\n};\r\n\r\nexport default function Intro() {\r\n  return (\r\n    <div name=\"intro\" className=\"Default\">\r\n      <div>\r\n        <Typography variant=\"h1\" className=\"text\" id=\"text1\">\r\n          Hi,\r\n        </Typography>\r\n        <Typography variant=\"h2\" className=\"text\" id=\"text2\">\r\n          I'm Ashutosh\r\n        </Typography>\r\n        <Typography variant=\"h3\" className=\"text\" id=\"text3\">\r\n          Tech-Savvy...<span class=\"blinking-cursor\">|</span>\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// Importing the Files\r\nimport React from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// Importing the css\r\nimport \"../style/about.css\";\r\n\r\n// Making it responsive\r\nconst Desktop = ({ children }) => {\r\n  const isDesktop = useMediaQuery({ minWidth: 992 });\r\n  return isDesktop ? children : null;\r\n};\r\nconst Tablet = ({ children }) => {\r\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 });\r\n  return isTablet ? children : null;\r\n};\r\nconst Mobile = ({ children }) => {\r\n  const isMobile = useMediaQuery({ maxWidth: 767 });\r\n  return isMobile ? children : null;\r\n};\r\nconst Default = ({ children }) => {\r\n  const isNotMobile = useMediaQuery({ minWidth: 768 });\r\n  return isNotMobile ? children : null;\r\n};\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"about\" name=\"about\">\r\n      <div>\r\n        <Typography variant=\"h1\" align=\"center\" className=\"title\">\r\n          <Paper elevation={7} id=\"paper1\">\r\n            ABOUT\r\n          </Paper>\r\n        </Typography>\r\n        <Typography variant=\"h6\" align=\"center\" className=\"content\">\r\n          Ashutosh is a team player who loves to be around technology.\r\n          <br />\r\n          He is working smart and hard to fulfill his wish of becoming the \"Best\r\n          Technocrat in the World\".\r\n          <br />\r\n          He enjoys applying automation in his works, playing with the codes,\r\n          resolving errors, and contributing to the community\r\n          <br />\r\n          Learning new technologies and integrating them with others is a\r\n          passion for Ashutosh.\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","  // Importing the Files\r\n  import React from 'react';\r\n  import { useMediaQuery } from 'react-responsive'\r\n  import Typography from '@material-ui/core/Typography';\r\n  import Paper from '@material-ui/core/Paper';\r\n  import Button from '@material-ui/core/Button';\r\n\r\n\r\n  //Importing the files for color changes\r\n  import { createMuiTheme } from '@material-ui/core/styles';\r\n  import { ThemeProvider } from '@material-ui/styles';\r\n  // Importing the css\r\n  import '../style/skills.css';\r\n\r\n\r\n  // Making it responsive\r\n  const Desktop = ({ children }) => {\r\n      const isDesktop = useMediaQuery({ minWidth: 992 })\r\n      return isDesktop ? children : null\r\n    }\r\n    const Tablet = ({ children }) => {\r\n      const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 })\r\n      return isTablet ? children : null\r\n    }\r\n    const Mobile = ({ children }) => {\r\n      const isMobile = useMediaQuery({ maxWidth: 767 })\r\n      return isMobile ? children : null\r\n    }\r\n    const Default = ({ children }) => {\r\n      const isNotMobile = useMediaQuery({ minWidth: 768 })\r\n      return isNotMobile ? children : null\r\n    }\r\n\r\n\r\n    // Code for Color Changes for Primary\r\n    const theme = createMuiTheme({\r\n      palette: {\r\n        Default: {\r\n          main: '#76ff03',\r\n        },\r\n        primary: {\r\n          main: '#f44336',\r\n        },\r\n        secondary: {\r\n          main: '#2979ff',\r\n        },\r\n      },\r\n    });\r\n\r\n\r\n  export default function Skills() {\r\n        return (\r\n          <ThemeProvider theme={theme}>\r\n          <div name=\"skills\">\r\n              <Typography variant=\"h1\" className=\"title\"><Paper elevation={4} id=\"paper1\">SKILLS</Paper></Typography>\r\n              <div className=\"Buttons\">\r\n                <Button variant=\"outlined\" color=\"primary\"  id=\"1\"> Amazon Web Services</Button>\r\n                <Button variant=\"outlined\" color=\"secondary\"  id=\"1\"> Azure</Button>\r\n                <Button variant=\"outlined\" color=\"primary\"  id=\"1\"> GCP</Button>\r\n                <Button variant=\"outlined\"   id=\"1\"> OpenShift</Button>\r\n                <Button variant=\"outlined\" color=\"primary\"  id=\"1\"> Kubernetes</Button>\r\n                <Button variant=\"outlined\"   id=\"1\"> Ansible</Button>\r\n                <Button variant=\"outlined\" color=\"primary\"  id=\"1\"> DevOps</Button>\r\n                <Button variant=\"outlined\" color=\"secondary\"  id=\"1\"> Docker</Button>\r\n                <Button variant=\"outlined\"   id=\"1\"> Terraform</Button>\r\n                <Button variant=\"outlined\" color=\"secondary\"  id=\"1\">Jenkins</Button>\r\n                <Button variant=\"outlined\" color=\"primary\"  id=\"1\"> Python</Button>\r\n                <Button variant=\"outlined\" color=\"secondary\"  id=\"1\">Node.js</Button>\r\n                <Button variant=\"outlined\"  id=\"1\">React</Button>\r\n\r\n              </div>\r\n          </div>\r\n\r\n\r\n\r\n          </ThemeProvider>\r\n        )\r\n    }\r\n","export default __webpack_public_path__ + \"static/media/hadoop.0ae74348.png\";","export default __webpack_public_path__ + \"static/media/node.109e80dc.png\";","export default __webpack_public_path__ + \"static/media/terraform.a6b18dcc.png\";","// Importing the Files\r\nimport React from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// importing the images\r\nimport hadoop from \"../images/hadoop.png\";\r\nimport node from \"../images/node.png\";\r\nimport terraform from \"../images/terraform.png\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// Importing the css\r\nimport \"../style/project.css\";\r\n\r\n// Making it responsive\r\nconst Desktop = ({ children }) => {\r\n  const isDesktop = useMediaQuery({ minWidth: 992 });\r\n  return isDesktop ? children : null;\r\n};\r\nconst Tablet = ({ children }) => {\r\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 });\r\n  return isTablet ? children : null;\r\n};\r\nconst Mobile = ({ children }) => {\r\n  const isMobile = useMediaQuery({ maxWidth: 767 });\r\n  return isMobile ? children : null;\r\n};\r\nconst Default = ({ children }) => {\r\n  const isNotMobile = useMediaQuery({ minWidth: 768 });\r\n  return isNotMobile ? children : null;\r\n};\r\n\r\nexport default function Project() {\r\n  return (\r\n    <div name=\"project\">\r\n      <Typography variant=\"h1\" className=\"title\">\r\n        <Paper elevation={5} id=\"paper1\">\r\n          PROJECTs\r\n        </Paper>\r\n      </Typography>\r\n      <Grid container>\r\n        <Grid item xs={12} sm={6} md={4} style={{ display: \"flex\" }}>\r\n          <Card className=\"card\">\r\n            <CardActionArea>\r\n              <CardContent>\r\n                <CardMedia className=\"image\" image={hadoop} title=\"lvm\" />\r\n                <Typography variant=\"h5\" component=\"h1\" align=\"center\">\r\n                  Manage L.V.M For Hadoop Using ANSIBLE\r\n                </Typography>\r\n                <Typography\r\n                  id=\"body1\"\r\n                  variant=\"body1\"\r\n                  component=\"h1\"\r\n                  align=\"center\"\r\n                >\r\n                  Integrated the Python with Ansible to create a TUI for\r\n                  managing LVM for <b>Hadoop</b>\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  href=\"https://h1dd3nbl4d3.medium.com/hadoop-datanode-and-lvm-integration-with-ansible-python-2be148cdad9e\"\r\n                  color=\"primary\"\r\n                  id=\"but\"\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                >\r\n                  Learn More\r\n                </Button>\r\n              </CardActions>\r\n            </CardActionArea>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4} style={{ display: \"flex\" }}>\r\n          <Card className=\"card\">\r\n            <CardActionArea>\r\n              <CardContent>\r\n                <CardMedia className=\"image\" image={node} title=\"lvm\" />\r\n                <Typography variant=\"h5\" component=\"h1\" align=\"center\">\r\n                  UploadFile and Email iT\r\n                </Typography>\r\n                <Typography\r\n                  id=\"body1\"\r\n                  variant=\"body1\"\r\n                  component=\"h1\"\r\n                  align=\"center\"\r\n                >\r\n                  Created a App which can upload file to server and then Email\r\n                  it.\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  href=\"https://github.com/ashutosh5786/Node_FileUpload_-_Email\"\r\n                  color=\"primary\"\r\n                  id=\"but\"\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                >\r\n                  Learn More\r\n                </Button>\r\n              </CardActions>\r\n            </CardActionArea>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4} style={{ display: \"flex\" }}>\r\n          <Card className=\"card\">\r\n            <CardActionArea>\r\n              <CardContent>\r\n                <CardMedia className=\"image\" image={terraform} title=\"lvm\" />\r\n                <Typography variant=\"h5\" component=\"h1\" align=\"center\">\r\n                  Deployed EKS,RDS Cluster Through Terraform\r\n                </Typography>\r\n                <Typography\r\n                  id=\"body1\"\r\n                  variant=\"body1\"\r\n                  component=\"h1\"\r\n                  align=\"center\"\r\n                >\r\n                  Created Terraform script which launch the Website with High\r\n                  Availability on AWS\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  href=\"https://h1dd3nbl4d3.medium.com/how-to-deploy-eks-rds-cluster-with-website-using-terraform-d65ac23021f8\"\r\n                  color=\"primary\"\r\n                  id=\"but\"\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                >\r\n                  Learn More\r\n                </Button>\r\n              </CardActions>\r\n            </CardActionArea>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","// Importing the Files\r\nimport React from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\n// Making it responsive\r\nconst Desktop = ({ children }) => {\r\n  const isDesktop = useMediaQuery({ minWidth: 992 });\r\n  return isDesktop ? children : null;\r\n};\r\nconst Tablet = ({ children }) => {\r\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 });\r\n  return isTablet ? children : null;\r\n};\r\nconst Mobile = ({ children }) => {\r\n  const isMobile = useMediaQuery({ maxWidth: 767 });\r\n  return isMobile ? children : null;\r\n};\r\nconst Default = ({ children }) => {\r\n  const isNotMobile = useMediaQuery({ minWidth: 768 });\r\n  return isNotMobile ? children : null;\r\n};\r\n\r\nexport default function contact() {\r\n  return (\r\n    <div name=\"contact\">\r\n      <Typography variant=\"h1\" className=\"title\">\r\n        <Paper elevation={3} id=\"paper1\">\r\n          Contact\r\n        </Paper>\r\n      </Typography>\r\n\r\n      <Card className=\"card\">\r\n        <CardActionArea>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              <MailOutlineIcon fontSize=\"large\" color=\"primary\" />\r\n            </Typography>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              <Link href=\"mailto:ashutosh5786@outlook.com\">Email Me</Link>\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","// Importing the AppBar\nimport MyAppBar from \"./components/navigation\";\n// Importing the Introduction\nimport Intro from \"./components/intro\";\n// importing the about page\nimport About from \"./components/about\";\n// importing the skills page\nimport Skills from \"./components/skills\";\n// Importing the project page\nimport Project from \"./components/project\";\n// Importing the Contact page\nimport Contact from \"./components/contact\";\n\n// Importing the Styles\nimport \"./style/navigation.css\";\nimport \"./style/intro.css\";\nimport \"./style/about.css\";\nimport \"./style/skills.css\";\nimport \"./style/project.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MyAppBar />\n      <Intro />\n      <About />\n      <Skills />\n      <Project />\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"typeface-roboto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}